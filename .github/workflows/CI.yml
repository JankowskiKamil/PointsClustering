name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [ Debug ]

    runs-on: windows-latest

    env:
      Solution_Name: PointsClustering.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: PointsClustering\Tests\Tests.csproj          # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Install the .NET Core workload
      - name: Install .NET Core
        id: setup-dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      #Run linters
      - name: Run check-fmt
        run: dotnet format --no-restore whitespace --verbosity normal

      - name: Run check-lint
        run: |
          dotnet format --no-restore style --verbosity minimal --severity warn --verify-no-changes
          dotnet format --no-restore analyzers --verbosity minimal --severity warn --verify-no-changes

      # Execute all unit tests in the solution
      - name: Execute unit tests
        run: dotnet test

      # Restore the application to populate the obj folder with RuntimeIdentifiers
      - name: Restore the application
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}


